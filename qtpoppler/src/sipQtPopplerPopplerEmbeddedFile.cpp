/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.10.1 on Tue Jun  8 17:01:01 2010
 */

#include "sipAPIQtPoppler.h"

#line 78 "poppler-qt4.sip"
#define UNSTABLE_POPPLER_QT4 1
#include <qt4/poppler-qt4.h>
#line 13 "sipQtPopplerPopplerEmbeddedFile.cpp"

#line 43 "/usr/share/sip/PyQt4/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 17 "sipQtPopplerPopplerEmbeddedFile.cpp"
#line 346 "/usr/share/sip/PyQt4/QtCore/qdatetime.sip"
#include <qdatetime.h>
#line 20 "sipQtPopplerPopplerEmbeddedFile.cpp"
#line 41 "/usr/share/sip/PyQt4/QtCore/qstring.sip"
#include <qstring.h>
#line 23 "sipQtPopplerPopplerEmbeddedFile.cpp"


extern "C" {static PyObject *meth_Poppler_EmbeddedFile_name(PyObject *, PyObject *);}
static PyObject *meth_Poppler_EmbeddedFile_name(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Poppler::EmbeddedFile *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_Poppler_EmbeddedFile, &sipCpp))
        {
            QString *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->name());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_EmbeddedFile, sipName_name, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_Poppler_EmbeddedFile_description(PyObject *, PyObject *);}
static PyObject *meth_Poppler_EmbeddedFile_description(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Poppler::EmbeddedFile *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_Poppler_EmbeddedFile, &sipCpp))
        {
            QString *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->description());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_EmbeddedFile, sipName_description, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_Poppler_EmbeddedFile_modDate(PyObject *, PyObject *);}
static PyObject *meth_Poppler_EmbeddedFile_modDate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Poppler::EmbeddedFile *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_Poppler_EmbeddedFile, &sipCpp))
        {
            QDateTime *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QDateTime(sipCpp->modDate());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QDateTime,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_EmbeddedFile, sipName_modDate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_Poppler_EmbeddedFile_createDate(PyObject *, PyObject *);}
static PyObject *meth_Poppler_EmbeddedFile_createDate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Poppler::EmbeddedFile *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_Poppler_EmbeddedFile, &sipCpp))
        {
            QDateTime *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QDateTime(sipCpp->createDate());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QDateTime,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_EmbeddedFile, sipName_createDate, NULL);

    return NULL;
}


extern "C" {static PyObject *meth_Poppler_EmbeddedFile_data(PyObject *, PyObject *);}
static PyObject *meth_Poppler_EmbeddedFile_data(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Poppler::EmbeddedFile *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_Poppler_EmbeddedFile, &sipCpp))
        {
            QByteArray *sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QByteArray(sipCpp->data());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QByteArray,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_EmbeddedFile, sipName_data, NULL);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_Poppler_EmbeddedFile(void *, const sipTypeDef *);}
static void *cast_Poppler_EmbeddedFile(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_Poppler_EmbeddedFile)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_Poppler_EmbeddedFile(void *, int);}
static void release_Poppler_EmbeddedFile(void *sipCppV,int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast<Poppler::EmbeddedFile *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_Poppler_EmbeddedFile(sipSimpleWrapper *);}
static void dealloc_Poppler_EmbeddedFile(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_Poppler_EmbeddedFile(sipSelf->u.cppPtr,0);
    }
}


static PyMethodDef methods_Poppler_EmbeddedFile[] = {
    {SIP_MLNAME_CAST(sipName_createDate), meth_Poppler_EmbeddedFile_createDate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_data), meth_Poppler_EmbeddedFile_data, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_description), meth_Poppler_EmbeddedFile_description, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_modDate), meth_Poppler_EmbeddedFile_modDate, METH_VARARGS, NULL},
    {SIP_MLNAME_CAST(sipName_name), meth_Poppler_EmbeddedFile_name, METH_VARARGS, NULL}
};


pyqt4ClassTypeDef sipTypeDef_QtPoppler_Poppler_EmbeddedFile = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_Poppler__EmbeddedFile,
        {0}
    },
    {
        sipNameNr_EmbeddedFile,
        {0, 255, 0},
        5, methods_Poppler_EmbeddedFile,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    0,
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    -1,
    0,
    0,
    0,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_Poppler_EmbeddedFile,
    0,
    0,
    0,
    release_Poppler_EmbeddedFile,
    cast_Poppler_EmbeddedFile,
    0,
    0,
    0
},
    0,
    0,
    0
};
